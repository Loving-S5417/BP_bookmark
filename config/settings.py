"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!#4i=_34^#@cg-ti0=@b!+dn)&b%2n6&wq+-6vp6zv0yz2r9m&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False                               # Django는 DEBUG = True이면 "개발모드", DEBUG = False이면 "운영모드"로 인식한다.

ALLOWED_HOSTS = ['*']                       # "개발모드"의 경우에는 ALLOWED_HOSTS 값을 지정하지 않아도 ['127.0.0.1', 'localhost']로 간주하며,
                                            # "운영모드"의 경우에는 ALLOWED_HOSTS에 반드시 서버의 IP나 도메인으로 지정해야 한다.


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookmark.apps.BookmarkConfig', # bookmark  애플리케이션의 설정 클래스 등록. < 애플리케이션 디렉토리[bookmark]  안에 있는 apps.py 파일을 열어보면, 앱 설정 클래스가 BookmarkConfig로 정의되어 있다.
                                    # <<< Django가 설정 클래스를 찾을 수 있도록 모듈 경로를 포함하여 등록한다.
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],                  # == b_bookmark/templates   <<<   cf. 119페이지
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {                                        # Django는 기본적으로 SQLite3 데이터베이스 엔진을 사용하도록 설정되어 있다.
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Seoul'    # 타임존을 세계표준시(UTC)에서 한국시간('Asia/Seoul')으로 설정.

USE_I18N = True

USE_L10N = True

USE_TZ = False              # USE_TZ = True라고 설정하면 Django가 알아서, DB에는 UTC시간으로 저장하고 입출력UI 템플릿에는 TIME_ZONE에 설정한 시간대로 반영/처리해준다.
                            # 만일 'Asia/Seoul' 시간대만 사용하는 Django 프로그램을 개발하고 있다면,
                            # USE_TZ = False라고 설정하는 것이, DB에도 UTC가 아니라 한국시간으로 저장되기 때문에 보다 편리하다.
                            # cf. https://docs.djangoproject.com/en/2.2/topics/i18n/timezones/


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]     # == b_bookmark/static   <<<   cf. 129페이지
STATIC_ROOT = os.path.join(BASE_DIR, 'static_files')        # == b_bookmark/static ??????????????????  <<<   cf. 165페이지
